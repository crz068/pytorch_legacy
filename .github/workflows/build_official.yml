name: Build PyTorch for Multiple Python Versions

on:
  workflow_dispatch:
    inputs:
      pytorch_version:
        description: 'PyTorch version to build (e.g. 2.0.0, 2.1.0)'
        required: true
        type: string

jobs:
  build-all:
    runs-on: ubuntu-latest
    permissions: 
      contents: write
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 6

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup directories
        run: |
          mkdir -p _build/artifacts

      - name: Set environment variables
        run: |
          echo "PYTORCH_VERSION=${{ github.event.inputs.pytorch_version }}" >> $GITHUB_ENV
          echo "CUDA_VERSION=11.8" >> $GITHUB_ENV
          echo "CUDA_VERSION_NO_DOT=118" >> $GITHUB_ENV

      # Cache PyTorch source code
      - name: Cache PyTorch source
        id: cache-pytorch
        uses: actions/cache@v3
        with:
          path: pytorch
          key: pytorch-${{ github.event.inputs.pytorch_version }}-source

      # Clone PyTorch outside container if not cached
      - name: Clone PyTorch
        if: steps.cache-pytorch.outputs.cache-hit != 'true'
        run: |
          git clone --depth=1 -b "v${{ github.event.inputs.pytorch_version }}" --recursive https://github.com/pytorch/pytorch.git pytorch

      - name: Create build script
        run: |
          cat > build_wheels.sh << 'EOL'
          #!/usr/bin/env bash
          set -ex
          
          # Set up build environment variables
          export TZ=UTC
          export PYTORCH_BUILD_VERSION="${PYTORCH_VERSION}"
          export PYTORCH_BUILD_NUMBER="1"
          export OVERRIDE_PACKAGE_VERSION="${PYTORCH_VERSION}+cu${CUDA_VERSION_NO_DOT}"
          export TORCH_CUDA_ARCH_LIST="3.5;3.7"
          export USE_CUDA=1
          export USE_CUDNN=1
          export USE_MKLDNN=1
          export BUILD_TEST=0
          export USE_FBGEMM=1
          export BUILD_SPLIT_CUDA=ON
          export MAX_JOBS=2
          export SKIP_ALL_TESTS=1
          
          # # Critical variables for bundling CUDA libraries
          # export USE_STATIC_CUDNN=1
          # export USE_STATIC_NCCL=1
          # export ATEN_STATIC_CUDA=1
          # export USE_CUDA_STATIC_LINK=1
          # export TH_BINARY_BUILD=1
          # export INSTALL_TEST=0
          # export USE_CUPTI_SO=0
          # export USE_CUSPARSELT=1
          # export USE_CUFILE=1
          
          # Define Python versions to build
          python_versions=("3.9" "3.10" "3.11" "3.12")
          
          # Create a directory for the final wheels
          mkdir -p /remote/wheelhouse${CUDA_VERSION_NO_DOT}
          
          # Build wheels for each Python version
          for py_version in "${python_versions[@]}"; do
            echo "Building for Python ${py_version}"
            
            # Set Python version for build
            export DESIRED_PYTHON="${py_version}"
            
            # Run the official manywheel build script
            cd /pytorch
            SKIP_ALL_TESTS=1 /pytorch/.ci/pytorch/build.sh
          done
          
          # Copy all wheels to the artifacts directory
          cp /remote/wheelhouse${CUDA_VERSION_NO_DOT}/*.whl /artifacts/
          EOL
          
          chmod +x build_wheels.sh

      - name: Build PyTorch wheels with official builder image
        run: |
          docker run --rm \
            -e PYTORCH_VERSION=${{ env.PYTORCH_VERSION }} \
            -e CUDA_VERSION=${{ env.CUDA_VERSION }} \
            -e CUDA_VERSION_NO_DOT=${{ env.CUDA_VERSION_NO_DOT }} \
            -v $(pwd)/pytorch:/pytorch \
            -v $(pwd)/_build/artifacts:/artifacts \
            -v $(pwd)/build_wheels.sh:/build_wheels.sh \
            pytorch/manylinux-builder:cuda${{ env.CUDA_VERSION }} \
            bash /build_wheels.sh

      - name: List artifacts
        run: |
          ls -la _build/artifacts/
          
      - name: Upload artifacts to GitHub Actions
        uses: actions/upload-artifact@v4
        with:
          name: pytorch-${{ env.PYTORCH_VERSION }}-cu${{ env.CUDA_VERSION_NO_DOT }}-wheels
          path: _build/artifacts/*.whl
          if-no-files-found: error
          
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: pytorch-${{ github.event.inputs.pytorch_version }}
          name: PyTorch ${{ github.event.inputs.pytorch_version }}
          body: |
            PyTorch ${{ github.event.inputs.pytorch_version }} with CUDA 11.8
            Built with architecture support for SM35-SM90.
            
            Includes wheels for Python 3.8, 3.9, 3.10, 3.11, and 3.12.
            Build date: $(date +'%Y-%m-%d')
          draft: false
          prerelease: false
          files: _build/artifacts/*.whl
