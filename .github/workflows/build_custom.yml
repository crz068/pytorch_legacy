name: Build Custom

on:
  workflow_dispatch:
    inputs:
      pytorch_version:
        description: 'PyTorch version to build (e.g. 2.0.0, 2.1.0)'
        required: true
        type: string
      python_versions:
        description: 'Comma-separated list of Python versions to build (e.g. 3.9,3.10,3.11,3.12)'
        required: false
        default: '3.9,3.10,3.11,3.12'
        type: string

jobs:
  build-all:
    runs-on: ubuntu-latest
    timeout-minutes: 720
    permissions: 
      contents: write
    steps:
    
      - name: Get more space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 20480
          swap-size-mb: 6000
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup directories
        run: |
          mkdir -p _build/artifacts
          mkdir -p _build/wheelhouse118

      - name: Set environment variables
        run: |
          echo "PYTORCH_VERSION=${{ github.event.inputs.pytorch_version }}" >> $GITHUB_ENV
          echo "CUDA_VERSION=11.8" >> $GITHUB_ENV
          echo "CUDA_VERSION_NO_DOT=118" >> $GITHUB_ENV

      # Restore PyTorch source code from cache
      - name: Restore cached PyTorch source
        id: cache-pytorch-restore
        uses: actions/cache/restore@v4
        if: always()
        with:
          path: pytorch
          key: pytorch-${{ github.event.inputs.pytorch_version }}-source

      # Clone PyTorch outside container if not cached
      - name: Clone PyTorch
        if: steps.cache-pytorch-restore.outputs.cache-hit != 'true'
        run: |
          git clone --depth=1 -b "v${{ github.event.inputs.pytorch_version }}" --recursive https://github.com/pytorch/pytorch.git pytorch

      # Save PyTorch source code to cache (will save regardless of job success)
      - name: Save PyTorch source to cache
        if: steps.cache-pytorch-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        # if: always()
        with:
          path: pytorch
          key: ${{ steps.cache-pytorch-restore.outputs.cache-primary-key }}
          
      # Always use release/2.5 branch for pre-2.6 PyTorch versions
      - name: Clone builder repository
        run: |
          git clone --depth=1 -b "release/2.5" https://github.com/pytorch/builder.git builder

      - name: Display date and user info
        run: |
          echo "Current Date and Time (UTC): $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "Current User's Login: $USER"

      - name: Build PyTorch wheels with official builder image
        run: |
          docker run --rm \
            -e PYTORCH_VERSION=${{ env.PYTORCH_VERSION }} \
            -e CUDA_VERSION=${{ env.CUDA_VERSION }} \
            -e CUDA_VERSION_NO_DOT=${{ env.CUDA_VERSION_NO_DOT }} \
            -v $(pwd)/pytorch:/pytorch \
            -v $(pwd)/builder:/pytorch_builder \
            -v $(pwd)/_build/wheelhouse118:/remote/wheelhouse118 \
            -v $(pwd)/build_pytorch.py:/build_pytorch.py \
            pytorch/manylinux-builder:cuda${{ env.CUDA_VERSION }} \
            python3 /build_pytorch.py --pytorch-version ${{ env.PYTORCH_VERSION }} --python-versions '${{ github.event.inputs.python_versions }}'
      
      - name: Save PyTorch source to cache
        uses: actions/cache/save@v4
        with:
          path: pytorch
          key: ${{ steps.cache-pytorch-restore.outputs.cache-primary-key }}
          
      - name: List and copy wheel files
        run: |
          echo "Wheels directory content:"
          find _build/wheelhouse118 -type f -name "*.whl" | sort
          
          # Copy wheels to artifacts directory
          mkdir -p _build/artifacts/
          cp -v _build/wheelhouse118/*.whl _build/artifacts/ || echo "No wheel files found"

      - name: Upload artifacts to GitHub Actions
        uses: actions/upload-artifact@v4
        with:
          name: pytorch-${{ env.PYTORCH_VERSION }}-cu${{ env.CUDA_VERSION_NO_DOT }}-wheels
          path: _build/artifacts/*.whl
          if-no-files-found: error
          
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: pytorch-${{ github.event.inputs.pytorch_version }}
          name: PyTorch ${{ github.event.inputs.pytorch_version }}
          body: |
            PyTorch ${{ github.event.inputs.pytorch_version }} with CUDA 11.8
            Built with architecture support for SM35-SM90.
            
            Includes wheels for Python ${{ github.event.inputs.python_versions }}.
            Build date: $(date -u '+%Y-%m-%d')
          draft: false
          prerelease: false
          files: _build/artifacts/*.whl
